import{_ as s,c as a,o as l,a as n}from"./app.756a2891.js";const h=JSON.parse('{"title":"CSS","description":"","frontmatter":{},"headers":[{"level":2,"title":"基础篇","slug":"基础篇","link":"#基础篇","children":[{"level":3,"title":"布局单位","slug":"布局单位","link":"#布局单位","children":[]},{"level":3,"title":"盒模型","slug":"盒模型","link":"#盒模型","children":[]},{"level":3,"title":"BFC","slug":"bfc","link":"#bfc","children":[]},{"level":3,"title":"选择器","slug":"选择器","link":"#选择器","children":[]},{"level":3,"title":"伪类和伪元素","slug":"伪类和伪元素","link":"#伪类和伪元素","children":[]},{"level":3,"title":"CSS3新增内容","slug":"css3新增内容","link":"#css3新增内容","children":[]}]},{"level":2,"title":"Flex布局","slug":"flex布局","link":"#flex布局","children":[{"level":3,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":3,"title":"容器的属性","slug":"容器的属性","link":"#容器的属性","children":[]},{"level":3,"title":"项目的属性","slug":"项目的属性","link":"#项目的属性","children":[]}]},{"level":2,"title":"position布局","slug":"position布局","link":"#position布局","children":[{"level":3,"title":"static","slug":"static","link":"#static","children":[]},{"level":3,"title":"relative","slug":"relative","link":"#relative","children":[]},{"level":3,"title":"absolute","slug":"absolute","link":"#absolute","children":[]},{"level":3,"title":"fixed","slug":"fixed","link":"#fixed","children":[]},{"level":3,"title":"inherit","slug":"inherit","link":"#inherit","children":[]},{"level":3,"title":"sticky","slug":"sticky","link":"#sticky","children":[]}]},{"level":2,"title":"Grid布局","slug":"grid布局","link":"#grid布局","children":[{"level":3,"title":"容器的属性","slug":"容器的属性-1","link":"#容器的属性-1","children":[]},{"level":3,"title":"项目的属性","slug":"项目的属性-1","link":"#项目的属性-1","children":[]}]}],"relativePath":"guide/CSS.md","lastUpdated":1699339598000}'),e={name:"guide/CSS.md"},o=n(`<h1 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-hidden="true">#</a></h1><h2 id="基础篇" tabindex="-1">基础篇 <a class="header-anchor" href="#基础篇" aria-hidden="true">#</a></h2><h3 id="布局单位" tabindex="-1">布局单位 <a class="header-anchor" href="#布局单位" aria-hidden="true">#</a></h3><ul><li><p><strong>px</strong>为逻辑像素，它是一种相对长度单位，是相对于显示器屏幕分辨率而言的</p></li><li><p><strong>%</strong>：一般认为子元素的百分比是相对与上一级的父元素，可以实现响应式的效果</p></li><li><p><strong>em/rem</strong>：两者都是相对长度单位，相对于<code>font-size</code>的倍数，<code>em</code>相对于父元素，<code>rem</code>相对于根元素<code>html</code></p></li><li><p><strong>vw/wh</strong>：两者都是与视口窗口有关的单位，<code>vw</code>表示相对于视图窗口的宽度，<code>vh</code>表示相对于视图窗口高度，另外<code>vmin</code>代表<code>vh</code>和<code>vw</code>中的较小值，<code>vmax</code>代表<code>vh</code>和<code>vw</code>中的较大值</p></li></ul><h3 id="盒模型" tabindex="-1">盒模型 <a class="header-anchor" href="#盒模型" aria-hidden="true">#</a></h3><blockquote><p>盒模型都是由四个部分组成的，分别是<code>margin</code>、<code>border</code>、<code>padding</code>、<code>content</code></p></blockquote><ul><li><p><strong>标准盒模型：</strong><code>width</code>和<code>height</code>属性的范围只包括了<code>content</code></p></li><li><p><strong>IE盒模型（怪异盒模型）：</strong><code>width</code>和<code>height</code>属性的范围包括了<code>border</code>、<code>padding</code>和<code>content</code></p></li><li><p><code>box-sizeing</code>: <code>content-box</code>表示标准盒模型（默认值）</p></li><li><p><code>box-sizeing</code>: <code>border-box</code>表示IE盒模型（怪异盒模型）</p></li></ul><h3 id="bfc" tabindex="-1">BFC <a class="header-anchor" href="#bfc" aria-hidden="true">#</a></h3><blockquote><p><code>BFC</code>是一个完全独立的空间（布局环境），让空间里的子元素不会影响到外面的布局。<code>BFC</code>可以解决高度塌陷，外边距重叠，清除浮动问题，<code>BFC</code>可以看做是一个<code>CSS</code>元素属性</p></blockquote><h4 id="触发bfc条件" tabindex="-1">触发BFC条件 <a class="header-anchor" href="#触发bfc条件" aria-hidden="true">#</a></h4><ul><li>overflow: hidden</li><li>display: inline-block</li><li>position: absolute</li><li>position: fixed</li><li>display: table-cell</li><li>display: flex</li></ul><h4 id="bfc规则" tabindex="-1">BFC规则 <a class="header-anchor" href="#bfc规则" aria-hidden="true">#</a></h4><ul><li><code>BFC</code>就是一个块级元素，块级元素会独自占用一行</li><li><code>BFC</code>就是页面中的一个隔离的独立容器，容器里的标签不会影响到外部标签</li><li>垂直方向的距离由<code>margin</code>决定， 属于同一个<code>BFC</code>的两个相邻的标签外边距会发生重叠</li><li>计算<code>BFC</code>的高度时，浮动元素也参与计算</li></ul><h3 id="选择器" tabindex="-1">选择器 <a class="header-anchor" href="#选择器" aria-hidden="true">#</a></h3><ul><li><p>id选择器：权重为100</p></li><li><p>类选择器：权重为10</p></li><li><p>属性选择器：权重为10</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">[</span><span style="color:#C792EA;">target</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> yellow</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">//会将带有target属性的a元素的背景设置成红色</span></span>
<span class="line"></span></code></pre></div></li><li><p>伪类选择器：分类静态伪类选择器和动态伪类选择器，权重为10</p></li><li><p>标签选择器：权重为1</p></li><li><p>伪元素选择器：权重为1</p></li><li><p>相邻兄弟选择器：权重为0</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;!</span><span style="color:#F07178;">DOCTYPE</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">HTML</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">li</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">li</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#B2CCD6;">font-weight</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">bold</span><span style="color:#89DDFF;">;}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">List item 1</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">List item 2</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">List item 3</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">ul</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ol</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">List item 1</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">List item 2</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">List item 3</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">li</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">ol</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>如果需要选择紧接在另一个元素后的元素，而且二者有相同的父元素，可以使用相邻兄弟选择器，上述选择器只会把列表中的第二个和第三个列表项变为粗体。第一个列表项不受影响</p></li><li><p>子元素选择器：权重为0</p></li><li><p>后代选择器：权重为0</p></li><li><p>通配选择器：权重为0</p></li></ul><h3 id="伪类和伪元素" tabindex="-1">伪类和伪元素 <a class="header-anchor" href="#伪类和伪元素" aria-hidden="true">#</a></h3><blockquote><p>伪类是操作文档中已有的元素，而伪元素则是创建了一个不在文档树中的元素，并为其添加样式</p></blockquote><ul><li>伪类主要用于描述元素特殊情况和效果，伪类分为状态伪类和结构性伪类，如<code>:link,:hover</code>都是状态伪类，<code>:nth-child，:first-child,:last-child</code>都是结构性伪类，伪类的操作对象是<code>DOM</code>树已有的元素</li><li>伪元素是不存在于<code>DOM</code>树中的虚拟元素，它可以像正常的<code>DOM</code>元素一样设置内容和样式。比如<code>::before，::after</code>都是伪元素。但是伪元素并不是<code>DOM</code>元素，一般来说无法被js直接操作。但是我们可以通过比较的hack方法更改，比如使用CSSStyleSheet的insertRule来为伪元素修改样式</li><li>伪类都伪元素都可以使用单冒号，但是写法上推荐伪类使用单冒号，而伪元素使用双冒号，兼容性的事可以交给例如<code>postcss</code>去做比较好</li></ul><h3 id="css3新增内容" tabindex="-1">CSS3新增内容 <a class="header-anchor" href="#css3新增内容" aria-hidden="true">#</a></h3><ul><li>新增了选择器，属性选择器，结构伪类选择器等</li><li><code>border-radius</code></li><li>颜色，比如<code>rgba(),hsla(),opacity属性</code></li><li><code>transform</code>变换移位</li><li><code>transiton</code>过渡</li><li><code>animation</code>动画</li><li><code>flex</code></li><li>媒体查询</li></ul><h2 id="flex布局" tabindex="-1">Flex布局 <a class="header-anchor" href="#flex布局" aria-hidden="true">#</a></h2><h3 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-hidden="true">#</a></h3><blockquote><p>采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”</p></blockquote><p><img src="http://songnian.gitee.io/imgs/imgs/flex%E5%9D%90%E6%A0%87%E8%BD%B4.png" alt=""></p><p>容器默认存在两根轴，一根是横轴主轴<code>main axis</code>，一根是纵轴交叉轴<code>cross axis</code></p><h3 id="容器的属性" tabindex="-1">容器的属性 <a class="header-anchor" href="#容器的属性" aria-hidden="true">#</a></h3><h4 id="flex-direction" tabindex="-1">flex-direction <a class="header-anchor" href="#flex-direction" aria-hidden="true">#</a></h4><blockquote><p>flex-direction属性决定主轴的方向（即项目的排列方向）</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-direction</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> column | column-reverse | row | row-reverse </span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><img src="http://songnian.gitee.io/imgs/imgs/flex-direction.png" alt=""></p><ul><li>row（默认值）：主轴为水平方向，起点在左端</li><li>row-reverse：主轴为水平方向，起点在右端</li><li>column：主轴为垂直方向，起点在上沿</li><li>column-reverse：主轴为垂直方向，起点在下沿</li></ul><h4 id="flex-wrap" tabindex="-1">flex-wrap <a class="header-anchor" href="#flex-wrap" aria-hidden="true">#</a></h4><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-wrap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> nowrap | wrap | wrap-reverse</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li>nowrap（默认）：不换行</li><li>wrap：换行，第一行在上方</li><li>wrap-reverse：换行，第一行在下方</li></ul><h4 id="flex-flow" tabindex="-1">flex-flow <a class="header-anchor" href="#flex-flow" aria-hidden="true">#</a></h4><blockquote><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex-flow</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> &lt;flex-direction&gt; &lt;flex-wrap&gt;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="justify-content" tabindex="-1">justify-content <a class="header-anchor" href="#justify-content" aria-hidden="true">#</a></h4><blockquote><p>justify-content属性定义了项目在<strong>主轴</strong>上的对齐方式</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex-start | flex-end | center | space-between | space-around</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><img src="http://songnian.gitee.io/imgs/imgs/justify-content.png" alt=""></p><ul><li>flex-start（默认值）：左对齐</li><li>flex-end：右对齐</li><li>center： 居中</li><li>space-between：两端对齐，项目之间的间隔都相等</li><li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍</li></ul><h4 id="align-items" tabindex="-1">align-items <a class="header-anchor" href="#align-items" aria-hidden="true">#</a></h4><blockquote><p>align-items属性定义项目在<strong>交叉轴</strong>上如何对齐</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex-start | flex-end | center | baseline | stretch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><img src="http://songnian.gitee.io/imgs/imgs/align-items.png" alt=""></p><ul><li>flex-start：交叉轴的起点对齐</li><li>flex-end：交叉轴的终点对齐</li><li>center：交叉轴的中点对齐</li><li>baseline: 项目的第一行文字的基线对齐</li><li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度</li></ul><h4 id="align-content" tabindex="-1">align-content <a class="header-anchor" href="#align-content" aria-hidden="true">#</a></h4><blockquote><p>align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">box</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex-start | flex-end | center | space-between | space-around | stretch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><img src="http://songnian.gitee.io/imgs/imgs/align-content.png" alt=""></p><ul><li>flex-start：与交叉轴的起点对齐</li><li>flex-end：与交叉轴的终点对齐</li><li>center：与交叉轴的中点对齐</li><li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布</li><li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍</li><li>stretch（默认值）：轴线占满整个交叉轴</li></ul><h3 id="项目的属性" tabindex="-1">项目的属性 <a class="header-anchor" href="#项目的属性" aria-hidden="true">#</a></h3><h4 id="order" tabindex="-1">order <a class="header-anchor" href="#order" aria-hidden="true">#</a></h4><blockquote><p>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0</p></blockquote><h4 id="flex-grow" tabindex="-1">flex-grow <a class="header-anchor" href="#flex-grow" aria-hidden="true">#</a></h4><blockquote><p>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p></blockquote><p><img src="http://songnian.gitee.io/imgs/imgs/flex-grow.png" alt=""></p><p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><h4 id="flex-shrink" tabindex="-1">flex-shrink <a class="header-anchor" href="#flex-shrink" aria-hidden="true">#</a></h4><blockquote><p>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小</p></blockquote><p><img src="http://songnian.gitee.io/imgs/imgs/flex-shrink.jpg" alt=""></p><p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。负值对该属性无效。</p><h4 id="flex-basis" tabindex="-1">flex-basis <a class="header-anchor" href="#flex-basis" aria-hidden="true">#</a></h4><blockquote><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</p></blockquote><h4 id="flex" tabindex="-1">flex <a class="header-anchor" href="#flex" aria-hidden="true">#</a></h4><blockquote><p>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">flex</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> none | [ &lt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">flex-grow</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">&gt; &lt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">flex-shrink</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">&gt;? || &lt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">flex-basis</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">&gt; ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="align-self" tabindex="-1">align-self <a class="header-anchor" href="#align-self" aria-hidden="true">#</a></h4><blockquote><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">item</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-self</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> auto | flex-start | flex-end | center | baseline | stretch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><img src="http://songnian.gitee.io/imgs/imgs/align-self.png" alt=""></p><p>该属性可能取6个值，除了<code>auto</code>，其他都与<code>align-items</code>属性完全一致</p><h2 id="position布局" tabindex="-1">position布局 <a class="header-anchor" href="#position布局" aria-hidden="true">#</a></h2><h3 id="static" tabindex="-1">static <a class="header-anchor" href="#static" aria-hidden="true">#</a></h3><p><code>static</code>是默认值，就是没有定位，元素处于正常的文档流</p><h3 id="relative" tabindex="-1">relative <a class="header-anchor" href="#relative" aria-hidden="true">#</a></h3><p><code>relative </code>是相对定位，元素不会脱离文档流，元素会相对于原本自己的位置进行移动</p><h3 id="absolute" tabindex="-1">absolute <a class="header-anchor" href="#absolute" aria-hidden="true">#</a></h3><p><code>absolute </code>是绝对定位，元素会脱离文档流。它会相对于最近设置有定位的父元素进行移动；如果没有，则会相对于<code>body</code>元素进行移动定位</p><h3 id="fixed" tabindex="-1">fixed <a class="header-anchor" href="#fixed" aria-hidden="true">#</a></h3><p><code>fixed </code>是一种特殊的绝对定位，也会脱离文档流，只不过 <code>fixed </code>的元素是固定相对与 <code>body </code>来定位的</p><h3 id="inherit" tabindex="-1">inherit <a class="header-anchor" href="#inherit" aria-hidden="true">#</a></h3><p><code>inherit</code>用于继承父元素的<code>position</code>的值</p><h3 id="sticky" tabindex="-1">sticky <a class="header-anchor" href="#sticky" aria-hidden="true">#</a></h3><p><code>sticky</code>是粘性定位，可以说是相对定位<code>relative </code>和固定定位<code>fixed </code>的结合体，元素在跨越特定值之前被认为是相对定位，之后可以认为是固定定位，而且必须指定top、bottom、left、right4个值之一，否则只会处于相对定位</p><h2 id="grid布局" tabindex="-1">Grid布局 <a class="header-anchor" href="#grid布局" aria-hidden="true">#</a></h2><blockquote><p><code>Grid</code> 布局即网格布局，是一种新的 <code>CSS</code> 布局模型，比较擅长将一个页面划分为几个主要区域，以及定义这些区域的大小、位置、层次等关系。号称是最强大的的 <code>CSS</code> 布局方案，是目前唯一一种 <code>CSS</code> 二维布局。<a href="https://juejin.cn/post/6854573220306255880" target="_blank" rel="noreferrer">掘金文章参考</a></p></blockquote><h3 id="容器的属性-1" tabindex="-1">容器的属性 <a class="header-anchor" href="#容器的属性-1" aria-hidden="true">#</a></h3><h4 id="display" tabindex="-1">display <a class="header-anchor" href="#display" aria-hidden="true">#</a></h4><ul><li>grid:：grid布局，但是块级元素</li><li>inline-grid: grid布局，但是行内元素</li></ul><h4 id="grid-template-columns和grid-template-rows" tabindex="-1">grid-template-columns和grid-template-rows <a class="header-anchor" href="#grid-template-columns和grid-template-rows" aria-hidden="true">#</a></h4><blockquote><p><code>grid-template-columns</code>用于设置列宽，<code>grid-template-rows</code>用于设置行高。还能自持<code>fr</code>单位</p></blockquote><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">wrapper</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/*  声明了三列，宽度分别为 200px 100px 200px */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-columns</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/*  声明了两行，行高分别为 50px 50px  */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-rows</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/*  间距为5px */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-gap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ul><li><p>repeat() 函数：可以简化重复的值。该函数接受两个参数，第一个参数是重复的次数，第二个参数是所要重复的值。例如<code>grid-template-rows: repeat(2, 50px)</code></p></li><li><p>auto-fill：表示自动填充，让一行（或者一列）中尽可能的容纳更多的单元格。<code>grid-template-columns: repeat(auto-fill, 200px)</code> 表示列宽是 <code>200 px</code>，但列的数量是不固定的，只要浏览器能够容纳得下，就可以放置元素</p></li><li><p>fr：<code>fr</code> 单位代表网格容器中可用空间的一等份。<code>grid-template-columns: 200px 1fr 4fr</code> 表示第一个列宽设置为<code>200px</code>，后面剩余的宽度分为两部分，宽度分别为剩余宽度的 <code>1/5</code> 和 <code>4/5</code></p></li></ul><h4 id="grid-gap" tabindex="-1">grid-gap <a class="header-anchor" href="#grid-gap" aria-hidden="true">#</a></h4><blockquote><p><code>grid-gap</code>包括了<code>grid-row-gap</code>和<code>grid-column-gap</code>，属性分别设置行间距和列间距</p></blockquote><ul><li><code>grid-row-gap: 10px</code> 表示行间距是<code>10px</code></li><li><code>grid-column-gap: 30px</code> 表示列间距是<code>30px</code></li><li><code>grid-gap: 10px 30px</code> 实现的效果是一样的</li></ul><h4 id="grid-template-areas" tabindex="-1">grid-template-areas <a class="header-anchor" href="#grid-template-areas" aria-hidden="true">#</a></h4><blockquote><p><code>grid-template-areas</code> 属性用于定义区域，一个区域由一个或者多个单元格组成</p></blockquote><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">wrapper</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-areas</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">. header  header</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sidebar content content</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">sidebar</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-area</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> sidebar</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">content</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-area</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> content</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">header</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-area</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">header</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>以上代码表示将类 <code>.sidebar</code> <code>.content</code> <code>.header</code>所在的元素放在上面 <code>grid-template-areas</code> 中定义的 <code>sidebar</code> <code>content</code> <code>header</code> 区域中</p><p><img src="http://songnian.gitee.io/imgs/imgs/areas.jpg" alt=""></p><h4 id="grid-auto-flow" tabindex="-1">grid-auto-flow <a class="header-anchor" href="#grid-auto-flow" aria-hidden="true">#</a></h4><blockquote><p><code>grid-auto-flow</code> 属性控制着自动布局算法怎样运作，精确指定在网格中被自动布局的元素怎样排列。</p></blockquote><ul><li>row（默认值）：先行后列填，先填满第一行，再开始放入第二行</li><li>column：先列后行</li><li>[ row | column ] || dense：dense表示尽量填满</li></ul><h4 id="justify-items和align-items" tabindex="-1">justify-items和align-items <a class="header-anchor" href="#justify-items和align-items" aria-hidden="true">#</a></h4><blockquote><p><code>justify-items</code> 属性设置单元格内容的水平位置（左中右），<code>align-items</code> 属性设置单元格的垂直位置（上中下）</p></blockquote><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> start | end | center | stretch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> start | end | center | stretch</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="justify-content和align-content" tabindex="-1">justify-content和align-content <a class="header-anchor" href="#justify-content和align-content" aria-hidden="true">#</a></h4><blockquote><p><code>justify-content</code> 属性是整个内容区域在容器里面的水平位置（左中右），<code>align-content</code> 属性是整个内容区域的垂直位置（上中下）。它们都有如下的属性值</p></blockquote><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> start | end | center | stretch | space-around | space-between | space-evenly</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> start | end | center | stretch | space-around | space-between | space-evenly</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="grid-auto-columns和grid-auto-rows" tabindex="-1">grid-auto-columns和grid-auto-rows <a class="header-anchor" href="#grid-auto-columns和grid-auto-rows" aria-hidden="true">#</a></h4><blockquote><p><strong>隐式和显式网格</strong>：显式网格包含了你在 <code>grid-template-columns</code> 和 <code>grid-template-rows</code> 属性中定义的行和列。如果你在网格定义之外又放了一些东西，或者因为内容的数量而需要的更多网格轨道的时候，网格将会在隐式网格中创建行和列</p></blockquote><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">wrapper</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> grid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-columns</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*  只设置了两行，但实际的数量会超出两行，超出的行高会以 grid-auto-rows 算 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-template-rows</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-gap</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10px</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">grid-auto-rows</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="项目的属性-1" tabindex="-1">项目的属性 <a class="header-anchor" href="#项目的属性-1" aria-hidden="true">#</a></h3><h4 id="grid-area" tabindex="-1">grid-area <a class="header-anchor" href="#grid-area" aria-hidden="true">#</a></h4><blockquote><p><code>grid-area</code> 属性指定项目放在哪一个区域，在上面介绍 <code>grid-template-areas</code> 的时候有提到过，这里不再具体展开</p></blockquote><h4 id="justify-self和align-self" tabindex="-1">justify-self和align-self <a class="header-anchor" href="#justify-self和align-self" aria-hidden="true">#</a></h4><blockquote><p><code>justify-self</code> 属性设置单元格内容的水平位置（左中右），跟 <code>justify-items</code> 属性的用法完全一致，但只作用于单个项目</p><p><code>align-self</code> 属性设置单元格内容的垂直位置（上中下），跟<code>align-items</code>属性的用法完全一致，也是只作用于单个项目</p></blockquote><h4 id="grid-column-start-属性、grid-column-end-属性、grid-row-start-属性以及grid-row-end-属性" tabindex="-1">grid-column-start 属性、grid-column-end 属性、grid-row-start 属性以及grid-row-end 属性 <a class="header-anchor" href="#grid-column-start-属性、grid-column-end-属性、grid-row-start-属性以及grid-row-end-属性" aria-hidden="true">#</a></h4><blockquote><p>可以指定网格项目所在的四个边框，分别定位在哪根网格线，从而指定项目的位置</p></blockquote><ul><li>grid-column-start 属性：左边框所在的垂直网格线</li><li>grid-column-end 属性：右边框所在的垂直网格线</li><li>grid-row-start 属性：上边框所在的水平网格线</li><li>grid-row-end 属性：下边框所在的水平网格线</li></ul>`,123),p=[o];function t(c,i,r,d,D,y){return l(),a("div",null,p)}const C=s(e,[["render",t]]);export{h as __pageData,C as default};
