import{_ as s,c as n,o as a,a as l}from"./app.756a2891.js";const A=JSON.parse('{"title":"回溯算法","description":"","frontmatter":{},"headers":[{"level":2,"title":"回溯算法能解决的问题","slug":"回溯算法能解决的问题","link":"#回溯算法能解决的问题","children":[]},{"level":2,"title":"回溯算法的模板","slug":"回溯算法的模板","link":"#回溯算法的模板","children":[]},{"level":2,"title":"组合问题","slug":"组合问题","link":"#组合问题","children":[]},{"level":2,"title":"切割问题","slug":"切割问题","link":"#切割问题","children":[]},{"level":2,"title":"子集问题","slug":"子集问题","link":"#子集问题","children":[]},{"level":2,"title":"排列问题","slug":"排列问题","link":"#排列问题","children":[]},{"level":2,"title":"棋盘问题","slug":"棋盘问题","link":"#棋盘问题","children":[]}],"relativePath":"guide/leetcode/回溯算法.md","lastUpdated":1673594167000}'),p={name:"guide/leetcode/回溯算法.md"},o=l("",29),e=[o];function t(c,r,y,F,D,i){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
